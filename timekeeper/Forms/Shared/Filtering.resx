<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PopupMenuDates.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>265, 17</value>
  </metadata>
  <metadata name="TreeViewMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="TreeImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>142, 17</value>
  </metadata>
  <data name="TreeImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABu
        FwAAAk1TRnQBSQFMAgEBBwEAAVgBBAFYAQQBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8AMwADwAO8A7MDrAOkA5sDlBuMMwABeAE0AWIBeAE0AWIBeAE0AWIBeAE0
        AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0
        AWIBeAE0AWIwpQPAA9EDzwPNA8sDyQPHA8UDwwPBA78DvQO7A7oDuAOMMwABzgGSAbsB2wGvAc4B2wGv
        Ac4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGv
        Ac4B2wGvAc4BeAE0AWID0irhA6UDxAPVA9ID0APPA80DywPIA8cDxQPDA8EDvwO9A7sDlDMAAc4BkgG7
        AfgB7gH0AfgB7QH0AfcB7AHzAfYB6gHyAfYB6AHxAfUB6AHxAfUB5wHwAfQB5gHwAfMB5AHvAfMB4gHu
        AfIB4QHtAfEB4AHsAdsBrwHOAXgBNAFiA9ID+gn5BvgD9wb2BvUG9APhA6UDyAPYA9YD1APSA9ADzgPM
        A8oDyAPGA8QDwgPAA74DmzMAAc4BkgG7AfkB8AH2AfgB7gH0AfgB7QH0AfcB7AHzAfYB6gHyAfYB6AHx
        AfUB6AHxAfQB5gHwAfQB5QHvAfMB5AHvAfMB4gHuAfIB4QHtAdsBrwHOAXgBNAFiA9IG+gn5BvgD9wb2
        BvUD9APhA6UDyAPbA9kD2APWA9MD0QPPA84DzAPKA8cDxgPEA8IDpDMAAc4BkgG7AfkB8AH2AfkB8AH2
        AfgB7gH0AfgB7QH0AfcB7AHzAfYB6gHyAfYB6AHxAfUB5wHwAfQB5gHwAfQB5QHvAfMB5AHvAfMB4gHu
        AdsBrwHOAXgBNAFiA9ID+wb6CfkG+AP3BvYG9QPhA6UDyAPeA9wD2gPZA9cD1QPSA9EDzwPNA8sDyQPH
        A8UDrDMAAc4BkgG7AfoB8gH3AfkB8AH2AfkB8AH2AfgB7gH0AfgB7QH0AfcB7AHzAfYB6AHxAfUB6AHx
        AfUB5wHwAfQB5gHwAfQB5QHvAfMB5AHvAdsBrwHOAXgBNAFiA9IG+wb6CfkG+AP3BvYD9QPhA6UDyAPi
        A+AD3QPcA9oD2APWA9QD0gPQA84DzQPLA8gDsDMAAc4BkgG7AfoB8gH3AfoB8gH3AfkB8AH2AfkB8AH2
        AfgB7gH0AfgB7QH0AfYB6gHyAfYB6AHxAfUB6AHxAfUB5wHwAfQB5gHwAfQB5QHvAdsBrwHOAXgBNAFi
        A9IJ+wb6BvkG+Ab3BvYD4QOlA8gD5QPjA+ED4APdA9sD2gPYA9YD1APRA9ADzgPMA7AzAAHOAZIBuwH7
        AfUB+QH6AfIB9wH6AfIB9wH5AfAB9gH5AfAB9gH4Ae0B9AH3AewB8wH2AeoB8gH2AegB8QH1AegB8QH1
        AecB8AH0AeYB8AHbAa8BzgF4ATQBYgPSA/wJ+wb6BvkG+Ab3A/YD4QOlA8wD6APmA+UD4wPhA98D3APb
        A9kD1wPVA9MD0QPPA7gzAAHOAZIBuwH7AfUB+QH7AfUB+QH6AfIB9wH6AfIB9wH5AfAB9gH4Ae4B9AH4
        Ae0B9AH3AewB8wH2AeoB8gH2AegB8QH1AegB8QH1AecB8AHbAa8BzgF4ATQBYgPSBvwG+wb6CfkG+AP3
        A/YD4QOlA9AD7APqA+gD5gPkA+ID4APeA9wD2gPZA9cD1QPSA7gzAAHKAYoBtgHHAYEBsAHFAX4BrgHD
        AXoBqwHBAXUBqAG+AXABpQG8AWwBogG6AWcBnwG4AWMBnAG2AV4BmQG0AVoBlgGxAVUBkwGwAVIBkQGt
        AU0BjgGqAUkBigPSA/0G/Ab7BvoJ+Qb4A/cD4QOlEtAGzBXIA+czAAHKAYoBtgHbAa8BzgHbAa8BzgHb
        Aa8BzgHbAa8BzgHbAa8BzgHbAa8BzgHbAa8BzgHbAa8BzgHbAa8BzgHbAa8BzgHbAa8BzgHbAa8BzgHb
        Aa8BzgGtAU0BjgPYA9YD1APTA9ADzwPNA8sDygPIA8YDxQPDA8ADvwO9A9AD6AbsA+gD4APQA+VLAAHK
        AYoBtgHHAYEBsAHFAX4BrgHDAXoBqwHBAXUBqAG+AXABpQG8AWwBogG6AWcBnwG4AWMBnAG2AV4BmQG0
        AVoBlgGxAVUBkwGwAVIBkQGtAU0BjgGqAUkBigPYKuEDvwP3D9AD83sAA9gD1gPUA9MD0APPA80DywPK
        A8gDxgPFA8MDwAO/A73/AP8ApQABcAGIAZABYAJwAVACYAFAAlABMAE4AUABIAEoATABEAIgAhABIAIQ
        ASACEAEgAhABIAIQASACEAEgAhABIAIQASADAAFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFj
        AUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQMA
        AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8
        AwABNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQ
        ASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUDAAGAAYgBkAFiAcEB6AFcAb0B5gFWAboB5QFQ
        AbYB4wFKAbMB4QFEAa8B3wE+AawB3gE4AagB3AEyAaUB2gEsAaEB2AEmAZ0B1wEgAZoB1QEaAZYB0wEg
        ASgBMAMAAbcBogGTAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGn
        AdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAWMBSQE1AwACiwHXAqsB4gKrAeICqwHiAqsB4gKr
        AeICqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gIrAXwDAAF1AbIBVwGbAcgBhQGbAcgBhQGb
        AcgBhQGbAcgBhQGbAcgBhQGbAcgBhQGbAcgBhQGbAcgBhQGbAcgBhQGbAcgBhQGbAcgBhQGbAcgBhQGb
        AcgBhQE0AVABJQMAAYABkAGgAWwBxwHrAWYBxAHpAWABwAHoAVoBvQHmAVQBuQHkAU4BtQHiAUgBsgHh
        AUIBrgHfAT0BqwHdATYBpwHbATABpAHaASsBoAHYASUBnAHWATABOAFAAwABtwGiAZMB+gHvAesB+gHu
        AeoB+gHtAegB+QHsAecB+QHrAeUB+QHqAeQB+AHpAeIB+AHoAeEB+AHmAd8B9wHlAd4B9wHkAdwB9wHj
        AtsBuwGnAWMBSQE1AwACiwHXAuwB+QLrAfgC6gH4AukB+ALnAfcC5gH3AuUB9gLkAfYC4gH1AuAB9QLf
        AfQC3gH0AqsB4gIrAXwDAAF1AbIBVwHpAfMB5AHoAfMB4gHmAfIB4QHlAfEB3wHjAfAB3AHiAfAB2wHg
        Ae8B2QHfAe4B2AHdAe0B1QHbAewB0gHZAesB0AHYAeoBzwGbAcgBhQE0AVABJQMAAYABkAGgAXYBzgHu
        AXEBygHsAWoBxgHrAWUBwwHpAV8BvwHnAVkBvAHlAVMBuAHkAU0BtAHiAUcBsQHgAUEBrQHeATsBqgHd
        ATUBpgHbAS8BowHZAkABUAMAAbcBogGTAfsB8AHtAfoB7wHrAfoB7gHqAfoB7QHoAfkB7AHnAfkB6wHl
        AfkB6gHkAfgB6AHiAfgB5wHhAfgB5gHfAfcB5QHeAfcB5AHcAdsBuwGnAWMBSQE1AwACiwHXAu4B+QLs
        AfkC6wH4AuoB+ALpAfgC5wH3AuYB9wLkAfYC4wH2AuIB9QLgAfUC3wH0AqsB4gIrAXwDAAF1AbIBVwHr
        AfUB5wHpAfMB5AHoAfMB4gHmAfIB4QHlAfEB3wHjAfAB3AHiAfAB2wHfAe4B2AHeAe4B1gHdAe0B1QHb
        AewB0gHZAesB0AGbAcgBhQE0AVABJQMAAYABmAGgAYEB1AHxAXsB0AHvAXUBzAHuAW8ByQHsAWkBxQHq
        AWMBwgHoAV0BvgHnAVcBuwHlAVEBtwHjAUsBtAHhAUUBsAHgAT8BrAHeATkBqQHcAlABYAMAAbcBogGT
        AfsB8QHuAfsB8AHsAfoB7wHrAfoB7gHpAfoB7QHoAfkB7AHmAfkB6wHlAfkB6QHjAfgB6AHiAfgB5wHg
        AfgB5gHfAfcB5QHdAdsBuwGnAWMBSQE1AwACiwHXAu8B+gLuAfkC7AH5AusB+ALqAfgC6AH3AucB9wLl
        AfYC5AH2AuMB9gLiAfUC4AH1AqsB4gIrAXwDAAF1AbIBVwHtAfUB6AHrAfUB5wHpAfMB5AHoAfMB4gHm
        AfIB4QHkAfEB3gHjAfAB3AHgAe8B2QHfAe4B2AHeAe4B1gHdAe0B1QHbAewB0gGbAcgBhQE0AVABJQMA
        AYABmAGgAYsB2gH0AYUB1gHyAX8B0wHxAXkBzwHvAXMBzAHtAW0ByAHrAWcBxAHqAWEBwQHoAVsBvQHm
        AVYBugHkAU8BtgHjAUoBsgHhAUQBrwHfAVABYAFwAwABtwGiAZMB+wHyAe8B+wHxAe4B+wHwAewB+gHv
        AesB+gHuAekB+gHtAegB+QHrAeYB+QHqAeUB+QHpAeMB+AHoAeIB+AHnAeAB+AHmAd8B2wG7AacBYwFJ
        ATUDAAKLAdcC8AH6Au8B+gLuAfkC7AH5AusB+ALqAfgC5wH3AuYB9wLlAfYC5AH2AuMB9gLiAfUCqwHi
        AisBfAMAAXUBsgFXAe4B9gHqAe0B9QHoAesB9QHnAekB8wHkAegB8wHiAeYB8gHhAeMB8AHcAeIB8AHb
        AeAB7wHZAd8B7gHYAd4B7gHWAd0B7QHVAZsByAGFATQBUAElAwABgAGYAaABlQHgAfcBkAHcAfUBigHZ
        AfQBgwHVAfIBfgHSAfABeAHOAe4BcgHLAe0BbAHHAesBZgHDAekBYAHAAecBWgG8AeYBVAG5AeQBTgG1
        AeIBUAFgAXADAAG3AaIBkwH7AfMB8AH7AfIB7wH7AfEB7QH6AfAB7AH6Ae8B6gH6Ae4B6QH5AewB5wH5
        AesB5gH5AeoB5AH4AekB4wH4AegB4QH4AecB4AHbAbsBpwFjAUkBNQMAAosB1wLxAfoC8AH6Au8B+gLu
        AfkC7AH5AusB+ALpAfgC5wH3AuYB9wLlAfYC5AH2AuMB9gKrAeICKwF8AwABdQGyAVcB7wH2AesB7gH2
        AeoB7QH1AegB6wH1AecB6QHzAeQB6AHzAeIB5QHxAd8B4wHwAdwB4gHwAdsB4AHvAdkB3wHuAdgB3gHu
        AdYBmwHIAYUBNAFQASUDAAGQA6AB5gH6AZoB4wH4AZQB3wH3AY4B2wH1AYgB2AHzAYIB1AHxAXwB0QHw
        AXYBzQHuAXABygHsAWoBxgHqAWQBwwHpAV4BvwHnAVgBuwHlAWABcAGAAwABtwGiAZMB/AH0AfIB+wHz
        AfAB+wHyAe8B+wHxAe0B+gHwAewB+gHuAeoB+gHtAekB+QHsAecB+QHrAeYB+QHqAeQB+AHpAeMB+AHo
        AeEB2wG7AacBYwFJATUDAAKLAdcC8wH7AvEB+gLwAfoC7wH6Au4B+QLrAfgC6gH4AukB+ALnAfcC5gH3
        AuUB9gLkAfYCqwHiAisBfAMAAXUBsgFXAfEB+AHuAe8B9gHrAe4B9gHqAe0B9QHoAesB9QHnAegB8wHi
        AeYB8gHhAeUB8QHfAeMB8AHcAeIB8AHbAeAB7wHZAd8B7gHYAZsByAGFATQBUAElAwABkAGgAbABqgHs
        Af0BpAHpAfwBngHlAfoBmAHiAfgBkgHeAfYBjAHbAfQBhgHXAfMBgAHTAfEBegHQAe8BdAHMAe4BbwHJ
        AewBaAHFAeoBYgHCAegBYAFwAYADAAG3AaIBkwH8AfUB8wH8AfQB8QH7AfMB8AH7AfIB7gH7AfEB7QH6
        Ae8B6wH6Ae4B6gH6Ae0B6AH5AewB5wH5AesB5QH5AeoB5AH4AekB4gHbAbsBpwFjAUkBNQMAAosB1wL0
        AfsC8wH7AvEB+gLwAfoC7wH6AuwB+QLrAfgC6gH4AukB+ALnAfcC5gH3AuUB9gKrAeICKwF8AwABdQGy
        AVcB8gH4AfAB8QH4Ae4B7wH2AesB7gH2AeoB7QH1AegB6QHzAeQB6AHzAeIB5gHyAeEB5QHxAd8B4wHw
        AdwB4gHwAdsB4AHvAdkBmwHIAYUBNAFQASUDAAGQAaABsAGQAaABsAGQAaABsAGQAaABsAGQAaABsAGQ
        AqABkAGYAaABgAGYAaABgAGYAaABgAGYAaABgAGYAaABgAGYAaABgAGYAaABgAGYAaAByQHSAdUDAAHo
        AZsBdgHkAZMBbQHiAZABaAHfAYwBYwHdAYgBXgHbAYQBWgHZAYABVQHXAX0BUAHVAXkBSwHTAXUBRwHR
        AXEBQgHOAW0BPQHMAWoBOAHKAWYBNAHIAWIBLwMAAoMB1AJ5AdECdQHPAnABzQJqAcsCZQHJAl8BxwJb
        AcUCVQHDAlABwQJKAb8CRAG8Aj8BuwI9AbUCOQGwAwABbAGsAU0BZQGlAUUBYwGiAUQBYAGeAUIBXQGZ
        AUEBWwGUAT8BWQGQAT4BVwGMAT0BVAGIATsBUgGEATkBTwGAATgBTQF8ATYBTAF5ATUBSQF1ATMBRgFx
        ATIDAAGQAagCsAHoAfABsAHwAf8BsAHwAf8BsALwAZAB4AHwAZABoAGwAb8B0wHXGAAB6AGbAXYB2wG7
        AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7
        AacB2wG7AacB2wG7AacBzQFlATEDAAKDAdQCqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gKr
        AeICqwHiAqsB4gKrAeICqwHiAjwBtQMAAWwBrAFNAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGF
        AZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFAUkBdQEzAwAB5AHx
        AfYBkAGoAbABkAGoAbABkAGoAbABkAGoAbABkAGoAbAB4wHpAesbAAHoAZsBdgHkAZMBbQHiAZABaAHf
        AYwBYwHdAYgBXgHbAYQBWgHZAYABVQHXAX0BUAHVAXkBSwHTAXUBRwHRAXEBQgHOAW0BPQHMAWoBOAHK
        AWYBNAHIAWIBLwMAAoMB1AJ5AdECdQHPAnABzQJqAcsCZQHJAl8BxwJbAcUCVQHDAlABwQJKAb8CRAG8
        Aj8BuwI9AbUCOQGwAwABbAGsAU0BZQGlAUUBYwGiAUQBYAGeAUIBXQGZAUEBWwGUAT8BWQGQAT4BVwGM
        AT0BVAGIATsBUgGEATkBTwGAATgBTQF8ATYBTAF5ATUBSQF1ATMBRgFxATL/AIEAAUIBTQE+BwABPgMA
        ASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/8BAAb/AgAE/wQAAYAHAAGABwABgAcAAYAHAAGABwABgAcA
        AYAHAAGABwABgAcAAYAHAAGABAAB/wIAAYADAAEBAf8CAAL/AgAC/wIABv8CABD/AYABAAGAAQABgAEA
        AYABAAGAAQABgAEAAYABAAGAAQABgAEAAYABAAGAAQABgAEAAYABAAGAAQABgAEAAYABAAGAAQABgAEA
        AYABAAGAAQABgAEAAYABAAGAAQABgAEAAYABAAGAAQABgAEAAYABAAGAAQABgAEAAYABAAGAAQABgAEA
        AYABAAGAAQABgAEAAYABAAGAAQABgAEAAYABAAGAAX8BgAEAAYABAAGAAQABgAH/AYABAAGAAQABgAEA
        EP8L
</value>
  </data>
</root>