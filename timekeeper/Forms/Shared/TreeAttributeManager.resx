<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MenuOther.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="PopupMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <metadata name="TreeImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>226, 17</value>
  </metadata>
  <data name="TreeImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC2
        EwAAAk1TRnQBSQFMAgEBBgEAAfABAwHwAQMBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGBIAYP9gADD/A8ADvAOzA6wDpAObA5QbjGAAMKUDwAPRA88DzQPLA8kDxwPF
        A8MDwQO/A70DuwO6A7gDjGAAA9Iq4QOlA8QD1QPSA9ADzwPNA8sDyAPHA8UDwwPBA78DvQO7A5RgAAPS
        A/oJ+Qb4A/cG9gb1BvQD4QOlA8gD2APWA9QD0gPQA84DzAPKA8gDxgPEA8IDwAO+A5tgAAPSBvoJ+Qb4
        A/cG9gb1A/QD4QOlA8gD2wPZA9gD1gPTA9EDzwPOA8wDygPHA8YDxAPCA6RgAAPSA/sG+gn5BvgD9wb2
        BvUD4QOlA8gD3gPcA9oD2QPXA9UD0gPRA88DzQPLA8kDxwPFA6xgAAPSBvsG+gn5BvgD9wb2A/UD4QOl
        A8gD4gPgA90D3APaA9gD1gPUA9ID0APOA80DywPIA7BgAAPSCfsG+gb5BvgG9wb2A+EDpQPIA+UD4wPh
        A+AD3QPbA9oD2APWA9QD0QPQA84DzAOwYAAD0gP8CfsG+gb5BvgG9wP2A+EDpQPMA+gD5gPlA+MD4QPf
        A9wD2wPZA9cD1QPTA9EDzwO4YAAD0gb8BvsG+gn5BvgD9wP2A+EDpQPQA+wD6gPoA+YD5APiA+AD3gPc
        A9oD2QPXA9UD0gO4YAAD0gP9BvwG+wb6CfkG+AP3A+EDpRLQBswVyAPnYAAD2APWA9QD0wPQA88DzQPL
        A8oDyAPGA8UDwwPAA78DvQPQA+gG7APoA+AD0APlGP9gAAPYKuEDvwP3D9AD8xv/YAAD2APWA9QD0wPQ
        A88DzQPLA8oDyAPGA8UDwwPAA78DvTD/YABg/2AAYP9gAAFwAYgBkAFwAXgBgAFgAnABUAJgAUACUAEw
        ATgBQAEgASgBMAEQAiACEAEgAhABIAIQASACEAEgAhABIAIQASACEAEgAhABIAFwAYgBkAFwAXgBgAFg
        AnABUAJgAUACUAEwATgBQAEgASgBMAEQAiACEAEgAhABIAIQASACEAEgAhABIAIQASACEAEgAhABIGAA
        AXABiAGQAV4BvgHnAVgBuwHlAVEBtwHjAUwBtAHhAUYBsAHgAUABrQHeAToBqQHcATQBpQHbAS4BogHZ
        ASgBngHXASIBmwHVARwBlwHTARYBlAHSARABkAHQARACIAFwAYgBkAFeAb4B5wFYAbsB5QFRAbcB4wFM
        AbQB4QFGAbAB4AFAAa0B3gE6AakB3AE0AaUB2wEuAaIB2QEoAZ4B1wEiAZsB1QEcAZcB0wEWAZQB0gEQ
        AZAB0AEQAiABYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJ
        ATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUBYwFJATUCKwF8AisBfAIrAXwCKwF8
        AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AYABiAGQAWgBxQHq
        AWIBwQHoAVwBvQHmAVYBugHlAVABtgHjAUoBswHhAUQBrwHfAT4BrAHeATgBqAHcATIBpQHaASwBoQHY
        ASYBnQHXASABmgHVARoBlgHTASABKAEwAYABiAGQAWgBxQHqAWIBwQHoAVwBvQHmAVYBugHlAVABtgHj
        AUoBswHhAUQBrwHfAT4BrAHeATgBqAHcATIBpQHaASwBoQHYASYBnQHXASABmgHVARoBlgHTASABKAEw
        AbcBogGTAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGn
        AdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAWMBSQE1AosB1wKrAeICqwHiAqsB4gKrAeICqwHi
        AqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAisBfAGAAZABoAFyAcsB7QFsAccB6wFm
        AcQB6QFgAcAB6AFaAb0B5gFUAbkB5AFOAbUB4gFIAbIB4QFCAa4B3wE9AasB3QE2AacB2wEwAaQB2gEr
        AaAB2AElAZwB1gEwATgBQAGAAZABoAFyAcsB7QFsAccB6wFmAcQB6QFgAcAB6AFaAb0B5gFUAbkB5AFO
        AbUB4gFIAbIB4QFCAa4B3wE9AasB3QE2AacB2wEwAaQB2gErAaAB2AElAZwB1gEwATgBQAG3AaIBkwH7
        AfAB7QH6Ae8B6wH6Ae4B6gH6Ae0B6AH5AewB5wH5AesB5QH5AeoB5AH4AekB4gH4AegB4QH4AeYB3wH3
        AeUB3gH3AeQB3AH3AeMC2wG7AacBYwFJATUCiwHXAu4B+QLsAfkC6wH4AuoB+ALpAfgC5wH3AuYB9wLl
        AfYC5AH2AuIB9QLgAfUC3wH0At4B9AKrAeICKwF8AYABkAGgAXwB0QHwAXYBzgHuAXEBygHsAWoBxgHr
        AWUBwwHpAV8BvwHnAVkBvAHlAVMBuAHkAU0BtAHiAUcBsQHgAUEBrQHeATsBqgHdATUBpgHbAS8BowHZ
        AkABUAGAAZABoAF8AdEB8AF2Ac4B7gFxAcoB7AFqAcYB6wFlAcMB6QFfAb8B5wFZAbwB5QFTAbgB5AFN
        AbQB4gFHAbEB4AFBAa0B3gE7AaoB3QE1AaYB2wEvAaMB2QJAAVABtwGiAZMB+wHxAe4B+wHwAe0B+gHv
        AesB+gHuAeoB+gHtAegB+QHsAecB+QHrAeUB+QHqAeQB+AHoAeIB+AHnAeEB+AHmAd8B9wHlAd4B9wHk
        AdwB2wG7AacBYwFJATUCiwHXAu8B+gLuAfkC7AH5AusB+ALqAfgC6QH4AucB9wLmAfcC5AH2AuMB9gLi
        AfUC4AH1At8B9AKrAeICKwF8AYABmAGgAYcB1wHzAYEB1AHxAXsB0AHvAXUBzAHuAW8ByQHsAWkBxQHq
        AWMBwgHoAV0BvgHnAVcBuwHlAVEBtwHjAUsBtAHhAUUBsAHgAT8BrAHeATkBqQHcAlABYAGAAZgBoAGH
        AdcB8wGBAdQB8QF7AdAB7wF1AcwB7gFvAckB7AFpAcUB6gFjAcIB6AFdAb4B5wFXAbsB5QFRAbcB4wFL
        AbQB4QFFAbAB4AE/AawB3gE5AakB3AJQAWABtwGiAZMB+wHyAe8B+wHxAe4B+wHwAewB+gHvAesB+gHu
        AekB+gHtAegB+QHsAeYB+QHrAeUB+QHpAeMB+AHoAeIB+AHnAeAB+AHmAd8B9wHlAd0B2wG7AacBYwFJ
        ATUCiwHXAvAB+gLvAfoC7gH5AuwB+QLrAfgC6gH4AugB9wLnAfcC5QH2AuQB9gLjAfYC4gH1AuAB9QKr
        AeICKwF8AYABmAGgAZEB3QH2AYsB2gH0AYUB1gHyAX8B0wHxAXkBzwHvAXMBzAHtAW0ByAHrAWcBxAHq
        AWEBwQHoAVsBvQHmAVYBugHkAU8BtgHjAUoBsgHhAUQBrwHfAVABYAFwAYABmAGgAZEB3QH2AYsB2gH0
        AYUB1gHyAX8B0wHxAXkBzwHvAXMBzAHtAW0ByAHrAWcBxAHqAWEBwQHoAVsBvQHmAVYBugHkAU8BtgHj
        AUoBsgHhAUQBrwHfAVABYAFwAbcBogGTAfsB8wHxAfsB8gHvAfsB8QHuAfsB8AHsAfoB7wHrAfoB7gHp
        AfoB7QHoAfkB6wHmAfkB6gHlAfkB6QHjAfgB6AHiAfgB5wHgAfgB5gHfAdsBuwGnAWMBSQE1AosB1wLy
        AfsC8AH6Au8B+gLuAfkC7AH5AusB+ALqAfgC5wH3AuYB9wLlAfYC5AH2AuMB9gLiAfUCqwHiAisBfAGA
        AZgBoAGbAeQB+QGVAeAB9wGQAdwB9QGKAdkB9AGDAdUB8gF+AdIB8AF4Ac4B7gFyAcsB7QFsAccB6wFm
        AcMB6QFgAcAB5wFaAbwB5gFUAbkB5AFOAbUB4gFQAWABcAGAAZgBoAGbAeQB+QGVAeAB9wGQAdwB9QGK
        AdkB9AGDAdUB8gF+AdIB8AF4Ac4B7gFyAcsB7QFsAccB6wFmAcMB6QFgAcAB5wFaAbwB5gFUAbkB5AFO
        AbUB4gFQAWABcAG3AaIBkwH8AfQB8gH7AfMB8AH7AfIB7wH7AfEB7QH6AfAB7AH6Ae8B6gH6Ae4B6QH5
        AewB5wH5AesB5gH5AeoB5AH4AekB4wH4AegB4QH4AecB4AHbAbsBpwFjAUkBNQKLAdcC8wH7AvEB+gLw
        AfoC7wH6Au4B+QLsAfkC6wH4AukB+ALnAfcC5gH3AuUB9gLkAfYC4wH2AqsB4gIrAXwBkAKgAaYB6gH8
        AaAB5gH6AZoB4wH4AZQB3wH3AY4B2wH1AYgB2AHzAYIB1AHxAXwB0QHwAXYBzQHuAXABygHsAWoBxgHq
        AWQBwwHpAV4BvwHnAVgBuwHlAWABcAGAAZACoAGmAeoB/AGgAeYB+gGaAeMB+AGUAd8B9wGOAdsB9QGI
        AdgB8wGCAdQB8QF8AdEB8AF2Ac0B7gFwAcoB7AFqAcYB6gFkAcMB6QFeAb8B5wFYAbsB5QFgAXABgAG3
        AaIBkwH8AfUB8wH8AfQB8gH7AfMB8AH7AfIB7wH7AfEB7QH6AfAB7AH6Ae4B6gH6Ae0B6QH5AewB5wH5
        AesB5gH5AeoB5AH4AekB4wH4AegB4QHbAbsBpwFjAUkBNQKLAdcC9AH7AvMB+wLxAfoC8AH6Au8B+gLu
        AfkC6wH4AuoB+ALpAfgC5wH3AuYB9wLlAfYC5AH2AqsB4gIrAXwBkAGgArAB8AH/AaoB7AH9AaQB6QH8
        AZ4B5QH6AZgB4gH4AZIB3gH2AYwB2wH0AYYB1wHzAYAB0wHxAXoB0AHvAXQBzAHuAW8ByQHsAWgBxQHq
        AWIBwgHoAWABcAGAAZABoAKwAfAB/wGqAewB/QGkAekB/AGeAeUB+gGYAeIB+AGSAd4B9gGMAdsB9AGG
        AdcB8wGAAdMB8QF6AdAB7wF0AcwB7gFvAckB7AFoAcUB6gFiAcIB6AFgAXABgAG3AaIBkwH8AfYB9AH8
        AfUB8wH8AfQB8QH7AfMB8AH7AfIB7gH7AfEB7QH6Ae8B6wH6Ae4B6gH6Ae0B6AH5AewB5wH5AesB5QH5
        AeoB5AH4AekB4gHbAbsBpwFjAUkBNQKLAdcC9QH8AvQB+wLzAfsC8QH6AvAB+gLvAfoC7AH5AusB+ALq
        AfgC6QH4AucB9wLmAfcC5QH2AqsB4gIrAXwBkAGgAbABkAGgAbABkAGgAbABkAGgAbABkAGgAbABkAGg
        AbABkAKgAZABmAGgAYABmAGgAYABmAGgAYABmAGgAYABmAGgAYABmAGgAYABmAGgAYABmAGgAckB0gHV
        AZABoAGwAZABoAGwAZABoAGwAZABoAGwAZABoAGwAZABoAGwAZACoAGQAZgBoAGAAZgBoAGAAZgBoAGA
        AZgBoAGAAZgBoAGAAZgBoAGAAZgBoAGAAZgBoAHJAdIB1QG3AaIBkwH9AfcB9gH8AfYB9AH8AfUB8wH8
        AfQB8QH7AfMB8AH7AfEB7gH7AfAB7QH6Ae8B6wH6Ae4B6gH6Ae0B6AH5AewB5wH5AesB5QH5AeoB5AHb
        AbsBpwFjAUkBNQKLAdcC9wH8AvUB/AL0AfsC8wH7AvEB+gLvAfoC7gH5AuwB+QLrAfgC6gH4AukB+ALn
        AfcC5gH3AqsB4gIrAXwBkAGoArAB6AHwAbAB8AH/AbAB8AH/AbAC8AGQAeAB8AGQAaABsAG/AdMB1xj/
        AZABqAKwAegB8AGwAfAB/wGwAfAB/wGwAvABkAHgAfABkAGgAbABvwHTAdcY/wHoAZsBdgHmAZcBcQHk
        AZMBbQHiAZABaAHfAYwBYwHdAYgBXgHbAYQBWgHZAYABVQHXAX0BUAHVAXkBSwHTAXUBRwHRAXEBQgHO
        AW0BPQHMAWoBOAHKAWYBNAHIAWIBLwKDAdQCfgHTAnkB0QJ1Ac8CcAHNAmoBywJlAckCXwHHAlsBxQJV
        AcMCUAHBAkoBvwJEAbwCPwG7Aj0BtQI5AbAB5AHxAfYBkAGoAbABkAGoAbABkAGoAbABkAGoAbABkAGo
        AbAB4wHpAesb/wHkAfEB9gGQAagBsAGQAagBsAGQAagBsAGQAagBsAGQAagBsAHjAekB6xv/AegBmwF2
        AdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGn
        AdsBuwGnAdsBuwGnAdsBuwGnAdsBuwGnAc0BZQExAoMB1AKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gKr
        AeICqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAjwBtWD/AegBmwF2AeYBlwFxAeQBkwFtAeIBkAFo
        Ad8BjAFjAd0BiAFeAdsBhAFaAdkBgAFVAdcBfQFQAdUBeQFLAdMBdQFHAdEBcQFCAc4BbQE9AcwBagE4
        AcoBZgE0AcgBYgEvAoMB1AJ+AdMCeQHRAnUBzwJwAc0CagHLAmUByQJfAccCWwHFAlUBwwJQAcECSgG/
        AkQBvAI/AbsCPQG1AjkBsGD/YAABQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4UA
        BP8EAAT/bAAE/ws=
</value>
  </data>
</root>