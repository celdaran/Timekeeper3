<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MenuOther.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="PopupMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <metadata name="TreeImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>226, 17</value>
  </metadata>
  <data name="TreeImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC0
        EwAAAk1TRnQBSQFMAgEBBgIAAQQBAAEEARABAAEQAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ASADAAEBAQABGAYAARgSAGD/YAAw/wPAA7wDswOsA6QDmwOUG4xgADClA8AD0QPPA80DywPJA8cDxQPD
        A8EDvwO9A7sDugO4A4xgAAPSKuEDpQPEA9UD0gPQA88DzQPLA8gDxwPFA8MDwQO/A70DuwOUYAAD0gP6
        CfkG+AP3BvYG9Qb0A+EDpQPIA9gD1gPUA9ID0APOA8wDygPIA8YDxAPCA8ADvgObYAAD0gb6CfkG+AP3
        BvYG9QP0A+EDpQPIA9sD2QPYA9YD0wPRA88DzgPMA8oDxwPGA8QDwgOkYAAD0gP7BvoJ+Qb4A/cG9gb1
        A+EDpQPIA94D3APaA9kD1wPVA9ID0QPPA80DywPJA8cDxQOsYAAD0gb7BvoJ+Qb4A/cG9gP1A+EDpQPI
        A+ID4APdA9wD2gPYA9YD1APSA9ADzgPNA8sDyAOwYAAD0gn7BvoG+Qb4BvcG9gPhA6UDyAPlA+MD4QPg
        A90D2wPaA9gD1gPUA9ED0APOA8wDsGAAA9ID/An7BvoG+Qb4BvcD9gPhA6UDzAPoA+YD5QPjA+ED3wPc
        A9sD2QPXA9UD0wPRA88DuGAAA9IG/Ab7BvoJ+Qb4A/cD9gPhA6UD0APsA+oD6APmA+QD4gPgA94D3APa
        A9kD1wPVA9IDuGAAA9ID/Qb8BvsG+gn5BvgD9wPhA6US0AbMFcgD52AAA9gD1gPUA9MD0APPA80DywPK
        A8gDxgPFA8MDwAO/A70D0APoBuwD6APgA9AD5Rj/YAAD2CrhA78D9w/QA/Mb/2AAA9gD1gPUA9MD0APP
        A80DywPKA8gDxgPFA8MDwAO/A70w/2AAYP9gAGD/YAABcAGIAZABcAF4AYABYAJwAVACYAFAAlABMAE4
        AUABIAEoATABEAIgAhABIAIQASACEAEgAhABIAIQASACEAEgAhABIAIQASABcAGIAZABcAF4AYABYAJw
        AVACYAFAAlABMAE4AUABIAEoATABEAIgAhABIAIQASACEAEgAhABIAIQASACEAEgAhABIAIQASBgAAFw
        AYgBkAFeAb4B5wFYAbsB5QFRAbcB4wFMAbQB4QFGAbAB4AFAAa0B3gE6AakB3AE0AaUB2wEuAaIB2QEo
        AZ4B1wEiAZsB1QEcAZcB0wEWAZQB0gEQAZAB0AEQAiABcAGIAZABXgG+AecBWAG7AeUBUQG3AeMBTAG0
        AeEBRgGwAeABQAGtAd4BOgGpAdwBNAGlAdsBLgGiAdkBKAGeAdcBIgGbAdUBHAGXAdMBFgGUAdIBEAGQ
        AdABEAIgAWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1
        AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AisBfAIrAXwCKwF8AisBfAIr
        AXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAGAAYgBkAFoAcUB6gFi
        AcEB6AFcAb0B5gFWAboB5QFQAbYB4wFKAbMB4QFEAa8B3wE+AawB3gE4AagB3AEyAaUB2gEsAaEB2AEm
        AZ0B1wEgAZoB1QEaAZYB0wEgASgBMAGAAYgBkAFoAcUB6gFiAcEB6AFcAb0B5gFWAboB5QFQAbYB4wFK
        AbMB4QFEAa8B3wE+AawB3gE4AagB3AEyAaUB2gEsAaEB2AEmAZ0B1wEgAZoB1QEaAZYB0wEgASgBMAG3
        AaIBkwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHb
        AbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwFjAUkBNQKLAdcCqwHiAqsB4gKrAeICqwHiAqsB4gKr
        AeICqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gIrAXwBgAGQAaABcgHLAe0BbAHHAesBZgHE
        AekBYAHAAegBWgG9AeYBVAG5AeQBTgG1AeIBSAGyAeEBQgGuAd8BPQGrAd0BNgGnAdsBMAGkAdoBKwGg
        AdgBJQGcAdYBMAE4AUABgAGQAaABcgHLAe0BbAHHAesBZgHEAekBYAHAAegBWgG9AeYBVAG5AeQBTgG1
        AeIBSAGyAeEBQgGuAd8BPQGrAd0BNgGnAdsBMAGkAdoBKwGgAdgBJQGcAdYBMAE4AUABtwGiAZMB+wHw
        Ae0B+gHvAesB+gHuAeoB+gHtAegB+QHsAecB+QHrAeUB+QHqAeQB+AHpAeIB+AHoAeEB+AHmAd8B9wHl
        Ad4B9wHkAdwB9wHjAtsBuwGnAWMBSQE1AosB1wLuAfkC7AH5AusB+ALqAfgC6QH4AucB9wLmAfcC5QH2
        AuQB9gLiAfUC4AH1At8B9ALeAfQCqwHiAisBfAGAAZABoAF8AdEB8AF2Ac4B7gFxAcoB7AFqAcYB6wFl
        AcMB6QFfAb8B5wFZAbwB5QFTAbgB5AFNAbQB4gFHAbEB4AFBAa0B3gE7AaoB3QE1AaYB2wEvAaMB2QJA
        AVABgAGQAaABfAHRAfABdgHOAe4BcQHKAewBagHGAesBZQHDAekBXwG/AecBWQG8AeUBUwG4AeQBTQG0
        AeIBRwGxAeABQQGtAd4BOwGqAd0BNQGmAdsBLwGjAdkCQAFQAbcBogGTAfsB8QHuAfsB8AHtAfoB7wHr
        AfoB7gHqAfoB7QHoAfkB7AHnAfkB6wHlAfkB6gHkAfgB6AHiAfgB5wHhAfgB5gHfAfcB5QHeAfcB5AHc
        AdsBuwGnAWMBSQE1AosB1wLvAfoC7gH5AuwB+QLrAfgC6gH4AukB+ALnAfcC5gH3AuQB9gLjAfYC4gH1
        AuAB9QLfAfQCqwHiAisBfAGAAZgBoAGHAdcB8wGBAdQB8QF7AdAB7wF1AcwB7gFvAckB7AFpAcUB6gFj
        AcIB6AFdAb4B5wFXAbsB5QFRAbcB4wFLAbQB4QFFAbAB4AE/AawB3gE5AakB3AJQAWABgAGYAaABhwHX
        AfMBgQHUAfEBewHQAe8BdQHMAe4BbwHJAewBaQHFAeoBYwHCAegBXQG+AecBVwG7AeUBUQG3AeMBSwG0
        AeEBRQGwAeABPwGsAd4BOQGpAdwCUAFgAbcBogGTAfsB8gHvAfsB8QHuAfsB8AHsAfoB7wHrAfoB7gHp
        AfoB7QHoAfkB7AHmAfkB6wHlAfkB6QHjAfgB6AHiAfgB5wHgAfgB5gHfAfcB5QHdAdsBuwGnAWMBSQE1
        AosB1wLwAfoC7wH6Au4B+QLsAfkC6wH4AuoB+ALoAfcC5wH3AuUB9gLkAfYC4wH2AuIB9QLgAfUCqwHi
        AisBfAGAAZgBoAGRAd0B9gGLAdoB9AGFAdYB8gF/AdMB8QF5Ac8B7wFzAcwB7QFtAcgB6wFnAcQB6gFh
        AcEB6AFbAb0B5gFWAboB5AFPAbYB4wFKAbIB4QFEAa8B3wFQAWABcAGAAZgBoAGRAd0B9gGLAdoB9AGF
        AdYB8gF/AdMB8QF5Ac8B7wFzAcwB7QFtAcgB6wFnAcQB6gFhAcEB6AFbAb0B5gFWAboB5AFPAbYB4wFK
        AbIB4QFEAa8B3wFQAWABcAG3AaIBkwH7AfMB8QH7AfIB7wH7AfEB7gH7AfAB7AH6Ae8B6wH6Ae4B6QH6
        Ae0B6AH5AesB5gH5AeoB5QH5AekB4wH4AegB4gH4AecB4AH4AeYB3wHbAbsBpwFjAUkBNQKLAdcC8gH7
        AvAB+gLvAfoC7gH5AuwB+QLrAfgC6gH4AucB9wLmAfcC5QH2AuQB9gLjAfYC4gH1AqsB4gIrAXwBgAGY
        AaABmwHkAfkBlQHgAfcBkAHcAfUBigHZAfQBgwHVAfIBfgHSAfABeAHOAe4BcgHLAe0BbAHHAesBZgHD
        AekBYAHAAecBWgG8AeYBVAG5AeQBTgG1AeIBUAFgAXABgAGYAaABmwHkAfkBlQHgAfcBkAHcAfUBigHZ
        AfQBgwHVAfIBfgHSAfABeAHOAe4BcgHLAe0BbAHHAesBZgHDAekBYAHAAecBWgG8AeYBVAG5AeQBTgG1
        AeIBUAFgAXABtwGiAZMB/AH0AfIB+wHzAfAB+wHyAe8B+wHxAe0B+gHwAewB+gHvAeoB+gHuAekB+QHs
        AecB+QHrAeYB+QHqAeQB+AHpAeMB+AHoAeEB+AHnAeAB2wG7AacBYwFJATUCiwHXAvMB+wLxAfoC8AH6
        Au8B+gLuAfkC7AH5AusB+ALpAfgC5wH3AuYB9wLlAfYC5AH2AuMB9gKrAeICKwF8AZACoAGmAeoB/AGg
        AeYB+gGaAeMB+AGUAd8B9wGOAdsB9QGIAdgB8wGCAdQB8QF8AdEB8AF2Ac0B7gFwAcoB7AFqAcYB6gFk
        AcMB6QFeAb8B5wFYAbsB5QFgAXABgAGQAqABpgHqAfwBoAHmAfoBmgHjAfgBlAHfAfcBjgHbAfUBiAHY
        AfMBggHUAfEBfAHRAfABdgHNAe4BcAHKAewBagHGAeoBZAHDAekBXgG/AecBWAG7AeUBYAFwAYABtwGi
        AZMB/AH1AfMB/AH0AfIB+wHzAfAB+wHyAe8B+wHxAe0B+gHwAewB+gHuAeoB+gHtAekB+QHsAecB+QHr
        AeYB+QHqAeQB+AHpAeMB+AHoAeEB2wG7AacBYwFJATUCiwHXAvQB+wLzAfsC8QH6AvAB+gLvAfoC7gH5
        AusB+ALqAfgC6QH4AucB9wLmAfcC5QH2AuQB9gKrAeICKwF8AZABoAKwAfAB/wGqAewB/QGkAekB/AGe
        AeUB+gGYAeIB+AGSAd4B9gGMAdsB9AGGAdcB8wGAAdMB8QF6AdAB7wF0AcwB7gFvAckB7AFoAcUB6gFi
        AcIB6AFgAXABgAGQAaACsAHwAf8BqgHsAf0BpAHpAfwBngHlAfoBmAHiAfgBkgHeAfYBjAHbAfQBhgHX
        AfMBgAHTAfEBegHQAe8BdAHMAe4BbwHJAewBaAHFAeoBYgHCAegBYAFwAYABtwGiAZMB/AH2AfQB/AH1
        AfMB/AH0AfEB+wHzAfAB+wHyAe4B+wHxAe0B+gHvAesB+gHuAeoB+gHtAegB+QHsAecB+QHrAeUB+QHq
        AeQB+AHpAeIB2wG7AacBYwFJATUCiwHXAvUB/AL0AfsC8wH7AvEB+gLwAfoC7wH6AuwB+QLrAfgC6gH4
        AukB+ALnAfcC5gH3AuUB9gKrAeICKwF8AZABoAGwAZABoAGwAZABoAGwAZABoAGwAZABoAGwAZABoAGw
        AZACoAGQAZgBoAGAAZgBoAGAAZgBoAGAAZgBoAGAAZgBoAGAAZgBoAGAAZgBoAGAAZgBoAHJAdIB1QGQ
        AaABsAGQAaABsAGQAaABsAGQAaABsAGQAaABsAGQAaABsAGQAqABkAGYAaABgAGYAaABgAGYAaABgAGY
        AaABgAGYAaABgAGYAaABgAGYAaABgAGYAaAByQHSAdUBtwGiAZMB/QH3AfYB/AH2AfQB/AH1AfMB/AH0
        AfEB+wHzAfAB+wHxAe4B+wHwAe0B+gHvAesB+gHuAeoB+gHtAegB+QHsAecB+QHrAeUB+QHqAeQB2wG7
        AacBYwFJATUCiwHXAvcB/AL1AfwC9AH7AvMB+wLxAfoC7wH6Au4B+QLsAfkC6wH4AuoB+ALpAfgC5wH3
        AuYB9wKrAeICKwF8AZABqAKwAegB8AGwAfAB/wGwAfAB/wGwAvABkAHgAfABkAGgAbABvwHTAdcY/wGQ
        AagCsAHoAfABsAHwAf8BsAHwAf8BsALwAZAB4AHwAZABoAGwAb8B0wHXGP8B6AGbAXYB5gGXAXEB5AGT
        AW0B4gGQAWgB3wGMAWMB3QGIAV4B2wGEAVoB2QGAAVUB1wF9AVAB1QF5AUsB0wF1AUcB0QFxAUIBzgFt
        AT0BzAFqATgBygFmATQByAFiAS8CgwHUAn4B0wJ5AdECdQHPAnABzQJqAcsCZQHJAl8BxwJbAcUCVQHD
        AlABwQJKAb8CRAG8Aj8BuwI9AbUCOQGwAeQB8QH2AZABqAGwAZABqAGwAZABqAGwAZABqAGwAZABqAGw
        AeMB6QHrG/8B5AHxAfYBkAGoAbABkAGoAbABkAGoAbABkAGoAbABkAGoAbAB4wHpAesb/wHoAZsBdgHb
        AbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHb
        AbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHNAWUBMQKDAdQCqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHi
        AqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gI8AbVg/wHoAZsBdgHmAZcBcQHkAZMBbQHiAZABaAHf
        AYwBYwHdAYgBXgHbAYQBWgHZAYABVQHXAX0BUAHVAXkBSwHTAXUBRwHRAXEBQgHOAW0BPQHMAWoBOAHK
        AWYBNAHIAWIBLwKDAdQCfgHTAnkB0QJ1Ac8CcAHNAmoBywJlAckCXwHHAlsBxQJVAcMCUAHBAkoBvwJE
        AbwCPwG7Aj0BtQI5AbBg/2AAAUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/+FAAT/
        BAAE/2wABP8L
</value>
  </data>
</root>