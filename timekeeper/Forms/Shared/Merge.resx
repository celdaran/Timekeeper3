<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TreeImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <data name="TreeImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAy
        GQAAAk1TRnQBSQFMAgEBBwEAAVABBAFQAQQBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8AMwADwAO8A7MDrAOkA5sDlBuMMAABeAE0AWIBeAE0AWIBeAE0AWIBeAE0
        AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0AWIBeAE0
        AWIBeAE0AWIBeAE0AWIwpQPAA9EDzwPNA8sDyQPHA8UDwwPBA78DvQO7A7oDuAOMMAABzgGSAbsB2wGv
        Ac4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGv
        Ac4B2wGvAc4B2wGvAc4B2wGvAc4BeAE0AWID0irhA6UDxAPVA9ID0APPA80DywPIA8cDxQPDA8EDvwO9
        A7sDlDAAAc4BkgG7AfkB8AH2AfgB7gH0AfgB7QH0AfcB7AHzAfYB6gHyAfYB6AHxAfUB6AHxAfUB5wHw
        AfQB5gHwAfMB5AHvAfMB4gHuAfIB4QHtAfEB4AHsAdsBrwHOAXgBNAFiA9ID+gn5BvgD9wb2BvUG9APh
        A6UDyAPYA9YD1APSA9ADzgPMA8oDyAPGA8QDwgPAA74DmzAAAc4BkgG7AfkB8AH2AfkB8AH2AfgB7gH0
        AfgB7QH0AfcB7AHzAfYB6gHyAfYB6AHxAfUB6AHxAfQB5gHwAfQB5QHvAfMB5AHvAfMB4gHuAfIB4QHt
        AdsBrwHOAXgBNAFiA9IG+gn5BvgD9wb2BvUD9APhA6UDyAPbA9kD2APWA9MD0QPPA84DzAPKA8cDxgPE
        A8IDpDAAAc4BkgG7AfoB8gH3AfkB8AH2AfkB8AH2AfgB7gH0AfgB7QH0AfcB7AHzAfYB6gHyAfYB6AHx
        AfUB5wHwAfQB5gHwAfQB5QHvAfMB5AHvAfMB4gHuAdsBrwHOAXgBNAFiA9ID+wb6CfkG+AP3BvYG9QPh
        A6UDyAPeA9wD2gPZA9cD1QPSA9EDzwPNA8sDyQPHA8UDrDAAAc4BkgG7AfoB8wH4AfoB8gH3AfkB8AH2
        AfkB8AH2AfgB7gH0AfgB7QH0AfcB7AHzAfYB6AHxAfUB6AHxAfUB5wHwAfQB5gHwAfQB5QHvAfMB5AHv
        AdsBrwHOAXgBNAFiA9IG+wb6CfkG+AP3BvYD9QPhA6UDyAPiA+AD3QPcA9oD2APWA9QD0gPQA84DzQPL
        A8gDsDAAAc4BkgG7AfsB9QH5AfoB8gH3AfoB8gH3AfkB8AH2AfkB8AH2AfgB7gH0AfgB7QH0AfYB6gHy
        AfYB6AHxAfUB6AHxAfUB5wHwAfQB5gHwAfQB5QHvAdsBrwHOAXgBNAFiA9IJ+wb6BvkG+Ab3BvYD4QOl
        A8gD5QPjA+ED4APdA9sD2gPYA9YD1APRA9ADzgPMA7AwAAHOAZIBuwH7AfUB+QH7AfUB+QH6AfIB9wH6
        AfIB9wH5AfAB9gH5AfAB9gH4Ae0B9AH3AewB8wH2AeoB8gH2AegB8QH1AegB8QH1AecB8AH0AeYB8AHb
        Aa8BzgF4ATQBYgPSA/wJ+wb6BvkG+Ab3A/YD4QOlA8wD6APmA+UD4wPhA98D3APbA9kD1wPVA9MD0QPP
        A7gwAAHOAZIBuwH7AfYB+gH7AfUB+QH7AfUB+QH6AfIB9wH6AfIB9wH5AfAB9gH4Ae4B9AH4Ae0B9AH3
        AewB8wH2AeoB8gH2AegB8QH1AegB8QH1AecB8AHbAa8BzgF4ATQBYgPSBvwG+wb6CfkG+AP3A/YD4QOl
        A9AD7APqA+gD5gPkA+ID4APeA9wD2gPZA9cD1QPSA7gwAAHOAZIBuwH8AfgC+wH2AfoB+wH1AfkB+wH1
        AfkB+gHyAfcB+QHwAfYB+QHwAfYB+AHuAfQB+AHtAfQB9wHsAfMB9gHqAfIB9gHoAfEB9QHoAfEB2wGv
        Ac4BeAE0AWID0gP9BvwG+wb6CfkG+AP3A+EDpRLQBswVyAPnMAABygGKAbYByAGGAbQBxwGBAbABxQF+
        Aa4BwwF6AasBwQF1AagBvgFwAaUBvAFsAaIBugFnAZ8BuAFjAZwBtgFeAZkBtAFaAZYBsQFVAZMBsAFS
        AZEBrQFNAY4BqgFJAYoD2APWA9QD0wPQA88DzQPLA8oDyAPGA8UDwwPAA78DvQPQA+gG7APoA+AD0APl
        SAABygGKAbYB2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGv
        Ac4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4B2wGvAc4BrQFNAY4D2CrhA78D9w/QA/NLAAHKAYoBtgHI
        AYYBtAHHAYEBsAHFAX4BrgHDAXoBqwHBAXUBqAG+AXABpQG8AWwBogG6AWcBnwG4AWMBnAG2AV4BmQG0
        AVoBlgGxAVUBkwGwAVIBkQGtAU0BjgGqAUkBigPYA9YD1APTA9ADzwPNA8sDygPIA8YDxQPDA8ADvwO9
        /wDhAAFwAYgBkAFwAXgBgAFgAnABUAJgAUACUAEwATgBQAEgASgBMAEQAiACEAEgAhABIAIQASACEAEg
        AhABIAIQASACEAEgAhABIJAAAXABiAGQAV4BvgHnAVgBuwHlAVEBtwHjAUwBtAHhAUYBsAHgAUABrQHe
        AToBqQHcATQBpQHbAS4BogHZASgBngHXASIBmwHVARwBlwHTARYBlAHSARABkAHQARACIAFjAUkBNQFj
        AUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFj
        AUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8
        AisBfAIrAXwCKwF8AisBfAIrAXwCKwF8AisBfAIrAXwBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQ
        ASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQASUBNAFQ
        ASUBNAFQASUBgAGIAZABaAHFAeoBYgHBAegBXAG9AeYBVgG6AeUBUAG2AeMBSgGzAeEBRAGvAd8BPgGs
        Ad4BOAGoAdwBMgGlAdoBLAGhAdgBJgGdAdcBIAGaAdUBGgGWAdMBIAEoATABtwGiAZMB2wG7AacB2wG7
        AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7
        AacB2wG7AacB2wG7AacBYwFJATUCiwHXAqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHi
        AqsB4gKrAeICqwHiAqsB4gKrAeICKwF8AXUBsgFXAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGF
        AZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFAZsByAGFATQBUAEl
        AYABkAGgAXIBywHtAWwBxwHrAWYBxAHpAWABwAHoAVoBvQHmAVQBuQHkAU4BtQHiAUgBsgHhAUIBrgHf
        AT0BqwHdATYBpwHbATABpAHaASsBoAHYASUBnAHWATABOAFAAbcBogGTAfsB8AHtAfoB7wHrAfoB7gHq
        AfoB7QHoAfkB7AHnAfkB6wHlAfkB6gHkAfgB6QHiAfgB6AHhAfgB5gHfAfcB5QHeAfcB5AHcAfcB4wLb
        AbsBpwFjAUkBNQKLAdcC7gH5AuwB+QLrAfgC6gH4AukB+ALnAfcC5gH3AuUB9gLkAfYC4gH1AuAB9QLf
        AfQC3gH0AqsB4gIrAXwBdQGyAVcB6wH1AecB6QHzAeQB6AHzAeIB5gHyAeEB5QHxAd8B4wHwAdwB4gHw
        AdsB4AHvAdkB3wHuAdgB3QHtAdUB2wHsAdIB2QHrAdAB2AHqAc8BmwHIAYUBNAFQASUBgAGQAaABfAHR
        AfABdgHOAe4BcQHKAewBagHGAesBZQHDAekBXwG/AecBWQG8AeUBUwG4AeQBTQG0AeIBRwGxAeABQQGt
        Ad4BOwGqAd0BNQGmAdsBLwGjAdkCQAFQAbcBogGTAfsB8QHuAfsB8AHtAfoB7wHrAfoB7gHqAfoB7QHo
        AfkB7AHnAfkB6wHlAfkB6gHkAfgB6AHiAfgB5wHhAfgB5gHfAfcB5QHeAfcB5AHcAdsBuwGnAWMBSQE1
        AosB1wLvAfoC7gH5AuwB+QLrAfgC6gH4AukB+ALnAfcC5gH3AuQB9gLjAfYC4gH1AuAB9QLfAfQCqwHi
        AisBfAF1AbIBVwHtAfUB6AHrAfUB5wHpAfMB5AHoAfMB4gHmAfIB4QHlAfEB3wHjAfAB3AHiAfAB2wHf
        Ae4B2AHeAe4B1gHdAe0B1QHbAewB0gHZAesB0AGbAcgBhQE0AVABJQGAAZgBoAGHAdcB8wGBAdQB8QF7
        AdAB7wF1AcwB7gFvAckB7AFpAcUB6gFjAcIB6AFdAb4B5wFXAbsB5QFRAbcB4wFLAbQB4QFFAbAB4AE/
        AawB3gE5AakB3AJQAWABtwGiAZMB+wHyAe8B+wHxAe4B+wHwAewB+gHvAesB+gHuAekB+gHtAegB+QHs
        AeYB+QHrAeUB+QHpAeMB+AHoAeIB+AHnAeAB+AHmAd8B9wHlAd0B2wG7AacBYwFJATUCiwHXAvAB+gLv
        AfoC7gH5AuwB+QLrAfgC6gH4AugB9wLnAfcC5QH2AuQB9gLjAfYC4gH1AuAB9QKrAeICKwF8AXUBsgFX
        Ae4B9gHqAe0B9QHoAesB9QHnAekB8wHkAegB8wHiAeYB8gHhAeQB8QHeAeMB8AHcAeAB7wHZAd8B7gHY
        Ad4B7gHWAd0B7QHVAdsB7AHSAZsByAGFATQBUAElAYABmAGgAZEB3QH2AYsB2gH0AYUB1gHyAX8B0wHx
        AXkBzwHvAXMBzAHtAW0ByAHrAWcBxAHqAWEBwQHoAVsBvQHmAVYBugHkAU8BtgHjAUoBsgHhAUQBrwHf
        AVABYAFwAbcBogGTAfsB8wHxAfsB8gHvAfsB8QHuAfsB8AHsAfoB7wHrAfoB7gHpAfoB7QHoAfkB6wHm
        AfkB6gHlAfkB6QHjAfgB6AHiAfgB5wHgAfgB5gHfAdsBuwGnAWMBSQE1AosB1wLyAfsC8AH6Au8B+gLu
        AfkC7AH5AusB+ALqAfgC5wH3AuYB9wLlAfYC5AH2AuMB9gLiAfUCqwHiAisBfAF1AbIBVwHwAfcB7QHu
        AfYB6gHtAfUB6AHrAfUB5wHpAfMB5AHoAfMB4gHmAfIB4QHjAfAB3AHiAfAB2wHgAe8B2QHfAe4B2AHe
        Ae4B1gHdAe0B1QGbAcgBhQE0AVABJQGAAZgBoAGbAeQB+QGVAeAB9wGQAdwB9QGKAdkB9AGDAdUB8gF+
        AdIB8AF4Ac4B7gFyAcsB7QFsAccB6wFmAcMB6QFgAcAB5wFaAbwB5gFUAbkB5AFOAbUB4gFQAWABcAG3
        AaIBkwH8AfQB8gH7AfMB8AH7AfIB7wH7AfEB7QH6AfAB7AH6Ae8B6gH6Ae4B6QH5AewB5wH5AesB5gH5
        AeoB5AH4AekB4wH4AegB4QH4AecB4AHbAbsBpwFjAUkBNQKLAdcC8wH7AvEB+gLwAfoC7wH6Au4B+QLs
        AfkC6wH4AukB+ALnAfcC5gH3AuUB9gLkAfYC4wH2AqsB4gIrAXwBdQGyAVcB8QH4Ae4B7wH2AesB7gH2
        AeoB7QH1AegB6wH1AecB6QHzAeQB6AHzAeIB5QHxAd8B4wHwAdwB4gHwAdsB4AHvAdkB3wHuAdgB3gHu
        AdYBmwHIAYUBNAFQASUBkAKgAaYB6gH8AaAB5gH6AZoB4wH4AZQB3wH3AY4B2wH1AYgB2AHzAYIB1AHx
        AXwB0QHwAXYBzQHuAXABygHsAWoBxgHqAWQBwwHpAV4BvwHnAVgBuwHlAWABcAGAAbcBogGTAfwB9QHz
        AfwB9AHyAfsB8wHwAfsB8gHvAfsB8QHtAfoB8AHsAfoB7gHqAfoB7QHpAfkB7AHnAfkB6wHmAfkB6gHk
        AfgB6QHjAfgB6AHhAdsBuwGnAWMBSQE1AosB1wL0AfsC8wH7AvEB+gLwAfoC7wH6Au4B+QLrAfgC6gH4
        AukB+ALnAfcC5gH3AuUB9gLkAfYCqwHiAisBfAF1AbIBVwHyAfgB8AHxAfgB7gHvAfYB6wHuAfYB6gHt
        AfUB6AHrAfUB5wHoAfMB4gHmAfIB4QHlAfEB3wHjAfAB3AHiAfAB2wHgAe8B2QHfAe4B2AGbAcgBhQE0
        AVABJQGQAaACsAHwAf8BqgHsAf0BpAHpAfwBngHlAfoBmAHiAfgBkgHeAfYBjAHbAfQBhgHXAfMBgAHT
        AfEBegHQAe8BdAHMAe4BbwHJAewBaAHFAeoBYgHCAegBYAFwAYABtwGiAZMB/AH2AfQB/AH1AfMB/AH0
        AfEB+wHzAfAB+wHyAe4B+wHxAe0B+gHvAesB+gHuAeoB+gHtAegB+QHsAecB+QHrAeUB+QHqAeQB+AHp
        AeIB2wG7AacBYwFJATUCiwHXAvUB/AL0AfsC8wH7AvEB+gLwAfoC7wH6AuwB+QLrAfgC6gH4AukB+ALn
        AfcC5gH3AuUB9gKrAeICKwF8AXUBsgFXAfQB+QHxAfIB+AHwAfEB+AHuAe8B9gHrAe4B9gHqAe0B9QHo
        AekB8wHkAegB8wHiAeYB8gHhAeUB8QHfAeMB8AHcAeIB8AHbAeAB7wHZAZsByAGFATQBUAElAZABoAGw
        AZABoAGwAZABoAGwAZABoAGwAZABoAGwAZABoAGwAZACoAGQAZgBoAGAAZgBoAGAAZgBoAGAAZgBoAGA
        AZgBoAGAAZgBoAGAAZgBoAGAAZgBoAHJAdIB1QG3AaIBkwH9AfcB9gH8AfYB9AH8AfUB8wH8AfQB8QH7
        AfMB8AH7AfEB7gH7AfAB7QH6Ae8B6wH6Ae4B6gH6Ae0B6AH5AewB5wH5AesB5QH5AeoB5AHbAbsBpwFj
        AUkBNQKLAdcC9wH8AvUB/AL0AfsC8wH7AvEB+gLvAfoC7gH5AuwB+QLrAfgC6gH4AukB+ALnAfcC5gH3
        AqsB4gIrAXwBdQGyAVcB9gH6AvQB+QHxAfIB+AHwAfEB+AHuAe8B9gHrAe0B9QHoAesB9QHnAekB8wHk
        AegB8wHiAeYB8gHhAeUB8QHfAeMB8AHcAeIB8AHbAZsByAGFATQBUAElAZABqAKwAegB8AGwAfAB/wGw
        AfAB/wGwAvABkAHgAfABkAGgAbABvwHTAdcYAAHoAZsBdgHmAZcBcQHkAZMBbQHiAZABaAHfAYwBYwHd
        AYgBXgHbAYQBWgHZAYABVQHXAX0BUAHVAXkBSwHTAXUBRwHRAXEBQgHOAW0BPQHMAWoBOAHKAWYBNAHI
        AWIBLwKDAdQCfgHTAnkB0QJ1Ac8CcAHNAmoBywJlAckCXwHHAlsBxQJVAcMCUAHBAkoBvwJEAbwCPwG7
        Aj0BtQI5AbABbAGsAU0BaQGpAUkBZQGlAUUBYwGiAUQBYAGeAUIBXQGZAUEBWwGUAT8BWQGQAT4BVwGM
        AT0BVAGIATsBUgGEATkBTwGAATgBTQF8ATYBTAF5ATUBSQF1ATMBRgFxATIB5AHxAfYBkAGoAbABkAGo
        AbABkAGoAbABkAGoAbABkAGoAbAB4wHpAesbAAHoAZsBdgHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHb
        AbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHbAbsBpwHN
        AWUBMQKDAdQCqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHiAqsB4gKrAeICqwHi
        AqsB4gI8AbUBbAGsAU0BmwHIAYUBmwHIAYUBmwHIAYUBmwHIAYUBmwHIAYUBmwHIAYUBmwHIAYUBmwHI
        AYUBmwHIAYUBmwHIAYUBmwHIAYUBmwHIAYUBmwHIAYUBmwHIAYUBSQF1ATMwAAHoAZsBdgHmAZcBcQHk
        AZMBbQHiAZABaAHfAYwBYwHdAYgBXgHbAYQBWgHZAYABVQHXAX0BUAHVAXkBSwHTAXUBRwHRAXEBQgHO
        AW0BPQHMAWoBOAHKAWYBNAHIAWIBLwKDAdQCfgHTAnkB0QJ1Ac8CcAHNAmoBywJlAckCXwHHAlsBxQJV
        AcMCUAHBAkoBvwJEAbwCPwG7Aj0BtQI5AbABbAGsAU0BaQGpAUkBZQGlAUUBYwGiAUQBYAGeAUIBXQGZ
        AUEBWwGUAT8BWQGQAT4BVwGMAT0BVAGIATsBUgGEATkBTwGAATgBTQF8ATYBTAF5ATUBSQF1ATMBRgFx
        ATLAAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/AQAG/wIABP9ZAAH/BgABAQH/
        BgAC/wIABv8CAAj/AgAG/1EAAf8GAAEBAf8GAAL/BgAI/ws=
</value>
  </data>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>